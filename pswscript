#!/bin/bash

# Restituisce il numero degli argomenti in input
NARGS=$#

# Il path del file e' il primo argomento
file="$1"

# L'opzione [--encrypt] [--decrypt] e' il secondo argomento
OPTION="$2"

function main() {

  # Chiama la funzione erro_check
  error_check
  
  # Se l'opzione e' [--encrypt] entro nell'if
  if [[ "$OPTION" = "--encrypt" ]]; then
    # Richiamo il comando gpg con l'opzione [-c] per criptare con AES128, dopodiche' uso il comando
    # shred [-zfu] per forzare la scrittura se necessario, nascondere lo shredding e eliminare il
    # file una volta completato. Uso il comando shred e non rm perche' il file che devo eliminare
    # ha informazioni sensibili. 
    if gpg -c $file && shred -zfu $file; then
      echo "encrypt on $file successfully"
    else
      echo "encrypt on $file aborted"
    fi

  # Se l'opzione e' [--decrypt] entro nell'if
  elif [[ "$OPTION" = "--decrypt" ]]; then
    # Chiamo il comando gpg con l'opzione [-o] per scegliere il nome del file di output.
    # Siccome il comando gpg quando cripta un file aggiunge l'estensione *.gpg, come nome
    # del file prendo il file criptato senza *.gpg
    # dopodiche' decripto il file e lo elimino. Non uso lo shred in questo caso perche'
    # sto eliminando un file criptato.
    if gpg -o $(basename $file .gpg) -d $file && rm -rf $file; then
      echo "decrypt on $file successfully"
    else
      echo "decrypt on $file aborted"
    fi
  fi
  exit 0
}

function error_check() {
  # Se non ci sono esattamente 2 argomenti e il primo argomento non e' [--help]
  if [[ $NARGS -ne 2 && "$file" != "--help" ]]; then
    echo "Not enough arguments supplied, use the option --help"
    exit 1
  fi

  # L'opzione -z controlla se $file e' una stringa vuota o no. Se e' una stringa vuota entra nell'if
  if [[ -z $file ]]; then
    echo "input file missing, use the option --help"
    exit 1
  fi

  if [[ "$OPTION" != "--encrypt" && "$OPTION" != "--decrypt" && "$file" != "--help" ]]; then
    echo "option not specified, use the option --help"
    exit 1
  fi

  # Stampa il menu' di help
  if [[ "$file" = "--help" ]]; then
    printf "Password Manager 1.0.86\n"
    printf "Copyright (C) 2015 Free Software Foundation, Inc.\n"
    printf "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\n"
    printf "This is free software: you are free to change and redistribute it.\n"
    printf "There is NO WARRANTY, to the extent permitted by law.\n\n"
    printf "Syntax: pswscript [files] [options]\n\n"
    printf "Options:\n"
    echo -n " --"
    printf "encrypt \t encrypt the file with AES128, shred and remove the text file\n"
    echo -n " --"
    printf "decrypt \t decrypt and remove the .gpg file\n"
    echo -n " --"
    printf "help    \t print a usage message summarizing the most useful command line options.\n"
    exit 0
  fi
}

# Esegue il main
main
